#!/bin/bash

start() {

    gearman_pid=`pgrep gearman`
    if [[ gearman_pid == "" ]]
    then
        echo "Warning : gearman not running"
    fi

    dirs_ok=false
    for rep in /var/run /var/log
    do
        if test -d $rep && test -w $rep
        then
            dirs_ok=true
        else
            dirs_ok=false
        fi
    done

    if [[ $dirs_ok ]]
    then
        nohup python ./worker.py >>/var/log/wapyd.log&
        echo $! > /var/run/wapyd.pid
        echo "Worker started"
    else
        echo "Some system dirs are not writeable, launch this script with root user"
    fi
}

stop() {
    pid=`cat /var/run/wapyd.pid`
    if [[ $pid == "" ]]
    then
        echo "No process running, use start to launch python worker"
        exit 1
    fi
    kill $pid

    echo "" > /var/run/wapyd.pid
    echo "Worker stopped" >>/var/log/wapyd.log
}

status() {
    gearman_pid=`pgrep gearman`
    if [[ gearman_pid == "" ]]
    then
        echo "gearman not running"
    else
        echo "gearman running, pid $gearman_pid"
    fi

    redis_pid=`pgrep redis`
    if [[ gearman_pid == "" ]]
    then
        echo "redis not running"
    else
        echo "redis running, pid $redis_pid"
    fi

    if [ -f /var/run/wapyd.pid ]
    then
        pid=`cat /var/run/wapyd.pid`
    else
        pid=""
    fi


    if [[ $pid == "" ]]
    then
        echo "Python worker not running"
    else
        echo "Python worker running, pid $pid"
    fi
}

case $1 in
        start)
                start
        ;;
        stop)
                stop
        ;;
        restart)
                stop; start;
        ;;
        status)
                status
        ;;
        *)
                echo "You must give a command : start, stop, restart or status"
        ;;
esac
exit 1





